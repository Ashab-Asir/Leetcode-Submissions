Prolem Name:Maximum Difference Between Node and Ancestor

link:https://leetcode.com/problems/maximum-difference-between-node-and-ancestor/

Code:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
#find max here
    int findMax(TreeNode* root,int mini,int maxi){
        if(root==NULL){
            return abs(maxi-mini);
        }
        mini=min(mini,root->val);
        maxi=max(maxi,root->val);
        int l=findMax(root->left,mini,maxi);
        int r=findMax(root->right,mini,maxi);
        return max(l,r);
    }

    int maxAncestorDiff(TreeNode* root) {
       int mini=root->val,maxi=root->val;
       int ans=findMax(root,mini,maxi);
       return ans;
    }
};